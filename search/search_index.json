{"config": {"lang": ["en"], "separator": "[\\s\\-]+", "pipeline": ["stopWordFilter"]}, "docs": [{"location": "", "title": "Home", "text": "<p>Welcome to the course website where you can find all the material for Asian American Studies 191A. Remember to use the Discord , GitHub discussion board , email , or utilize office hours if you have any questions!</p>"}, {"location": "#class-links", "title": "Class Links", "text": "Description Link Discord Server Invite Link Online Office Hours https://calendly.com/aa191a/office-hours <p>Group Project Sheet|https://docs.google.com/spreadsheets/d/1z8Wi2X4Qu1pp10-ArU6qgb9aINBtdKnSybHFJvTTRwE/edit?usp=sharing GitHub Discussions|https://github.com/albertkun/24SU-ASIAAM-191A/discussions</p>"}, {"location": "syllabus/", "title": "Syllabus", "text": "<p>Welcome to the syllabus for Asian American Studies 191A - Web Development and GIS for Social Change: Critical Data for Transforming Civil Society.</p>"}, {"location": "syllabus/#class-details", "title": "Class Details", "text": "<p>Asian American Studies Department, Summer Session A6, 2024</p> <p>Mondays, Wednesdays 3:15PM \u2013 5:20PM</p> <p>Online via Zoom</p>"}, {"location": "syllabus/#instructor", "title": "Instructor", "text": "<p>Albert S. Kochaphum (albertkun@oarc.ucla.edu)</p>"}, {"location": "syllabus/#office-hours", "title": "Office Hours", "text": "<p>By appointment below:</p> <ul> <li>https://calendly.com/aa191a/office-hours</li> </ul>"}, {"location": "syllabus/#preparation", "title": "Preparation", "text": "<ul> <li>Fill out the pre-course survey before the first day of instruction (6/26/2024).</li> </ul>"}, {"location": "syllabus/#please-note-this-syllabus-is-subject-to-change", "title": "Please note: This syllabus is subject to change.", "text": "<p>(Lam, C., Kochaphum, A., UCLA HateCrimeMap, 2020)</p> <p>\u201cMaps have always been made; they may have been one of the first forms of human communication. Maps exist in many forms, can represent different ideas and are used for many purposes. In choosing what to represent, how to represent it and what not to represent, maps are expressions of power.\u201d </p> <p>\u2013Logan Cochrane, Jon Corbett and Peter Keller, Impact of Community-based and Participatory Mapping</p>"}, {"location": "syllabus/#course-description", "title": "Course Description", "text": "<p>Welcome to our journey into web programming and mapping! This course has no pre-requisites as it is designed for non-mappers and non-coders to bridge the divide between spatial data and its application in the non-profit world for activism.</p> <p>Spatial data is all around us, whether it\u2019s survey information with zip codes or the various landmarks that comprise what people consider their neighborhood. While maps, like census tracts or political boundaries, are traditionally extensions of authorities of power, participatory mapping seeks to break down those barriers. The objective of this course is to put mapping into the hands of students so that we can transfer these skills and frameworks to civil society.</p> <p>Recent student protests at UCLA during May 2024, where peaceful pro-Palestinian students, staff, and faculty members faced police brutality, highlight the urgent need for change and the power of collective action. The way COVID-19 played out in the United States underscored the institutional problems related to health, inequality, and the environment. The global crisis of climate change reinforces the institutional racism and environmental issues that have proliferated far beyond the U.S. national borders. These challenges all underscore the importance of building coalitions and using data and maps, as tools to communicate, organize, and drive change.</p> <p>Given all these issues, more so than ever, civil society is needed to build the coalitions and reassess priorities to usher in an era of political change. Mapping and data, are transformative tools that when used effectively can strengthen these connections between coalitions because they are representations of the physical world around us. </p> <p>However, in non-profits and other fields of civic engagement, these skills are underutilized or simply seen as something \u201cleft to the experts\u201d. This course prepares students to be informed digital citizens and transfer these applications for practical use in civil society. The two main objectives for this course are: </p> <ol> <li>To walk away with technical web development skills relevant to mapping for civil society.</li> <li>To apply an ethical mapping framework to such projects.</li> </ol>"}, {"location": "syllabus/#course-objectives", "title": "Course Objectives", "text": "<ul> <li> <p>Undertake analysis that are informed by critical data studies,     participatory frameworks, social fieldwork, and ethical     considerations.</p> </li> <li> <p>Learn transferable technical data and mapping skills as applied     through action-oriented, collaborative, and project-based research.</p> </li> <li> <p>Learn to critically assess datasets, digital mapping/visualization and AI      technologies for use in non-profits</p> </li> <li> <p>Learn to create an interactive web map that uses community-based     data from a non-profit or community-based organization</p> </li> <li> <p>Perform a data needs assessment for non-profits for an interactive     map that enhances the mission/goals of the organization</p> </li> <li> <p>Learn to work in research teams in order to conceptualize, design,     carry out, and deliver persuasive arguments through presenting a web     site that includes a web map and other digital media.</p> </li> </ul>"}, {"location": "syllabus/#course-materials", "title": "Course materials", "text": "<p>Dougherty, J. and Ilyankou, I. \u201cHands-On Data Visualization: Interactive Storytelling from Spreadsheets to Code\u201d O\u2019Reilly Media, Inc. (2021). Available at https://handsondataviz.org/</p>"}, {"location": "syllabus/#remote-learning-expectations-for-students", "title": "Remote Learning Expectations for Students", "text": "<p>Info</p> <p>Given the fast-paced nature of the course, lectures may be recorded on request and provided to students.</p> <p>Even though remote learning has become more common since the pandemic, I hope that you will communicate with me if you experience anything in this course that does not support an inclusive environment. You can also report any incidents you may witness or experience online the Office of Equity, Diversity, and Inclusion on their website. Basic Zoom protocols for this course are as follows:</p> <ul> <li> <p>Mute microphones when not talking</p> </li> <li> <p>Feel free to use the chat to ask questions at any time</p> </li> <li> <p>Ensure that your preferred name and pronouns are included in your     Zoom name</p> </li> <li> <p>Though encouraged, video cameras are optional</p> <ul> <li>If cameras are turned off, please provide a profile picture, this will help me to identify you throughout the course </li> </ul> </li> </ul>"}, {"location": "syllabus/#lab-requirements", "title": "Lab Requirements", "text": "<p>Lab assignments will require Microsoft Visual Studio Code in addition to Git and a GitHub account. Firefox is the official web browser for the class. Use of other software is allowed but not supported (i.e. you are on your own to troubleshoot).</p> <p>Please be sure to have required software installed prior to lab sessions. Reach out if there are any installation issues or concerns before labs.</p>"}, {"location": "syllabus/#lab-assistance", "title": "Lab Assistance", "text": "<p>While the goal in the course is to ease everyone into GIS and writing code, I understand that the process may be intimidating and difficult. Rest assured that your success is my success, and I will try my best in making a learning environment that breaks down these initial barriers. We all have gone through the same struggles learning new technology, and I strongly encourage you get help as often as possible. Steps for troubleshooting technical problems can often be solved by a quick online search or reviewing lab materials for a misstep. The class community discussion forums is another resource for help. Regardless, do not hesitate to reach out to me for help.</p>"}, {"location": "syllabus/#assignments-and-evaluation", "title": "Assignments and Evaluation", "text": "<p>Students will be evaluated based on individual lab assignments, participation, and team based final project. Students are expected to attend all lectures and labs each week.</p> <ul> <li>45% = Group project and assignments</li> <li>45% = Individual class assignments</li> <li>10% = Preparation and participation in class</li> </ul> Task Number of items Points Total Points Total Grade Individual assignments 10 45 450 45% Final Project and Presentation 1 250 250 25% Group Project Assignments 4 50 200 20% Participation 100 10% Grand Total 1000 100%"}, {"location": "syllabus/#participation", "title": "Participation", "text": "<p>While participation is subjective, as long as you are active in the course you should not worry. The following are examples of active participation:   - Participating in class discussions    - Asking questions on Discord or the GitHub discussion board   - Helping other students with their questions   - Coming to office hours   - Overall class attendence</p>"}, {"location": "syllabus/#extra-credit", "title": "Extra Credit", "text": "<p>Extra credit will be given to students that provide exceptional work or contributions throughout the course. Optional assignments are opportunities for extra credit as well.</p>"}, {"location": "syllabus/#course-expectations", "title": "Course Expectations", "text": "<p>UCLA\u2019s Office for Equity, Diversity, and Inclusion provides resources, events, and information about current initiatives at UCLA to support equality for all members of the UCLA community. I hope that you will communicate with me if you experience anything in this course that does not support an inclusive environment, and you can also report any incidents you may witness or experience on campus to the Office of Equity, Diversity, and Inclusion.</p> <p>I expect you to take advantage of the opportunities that this course offers you by being an active and thoughtful participant in all sections and lectures, by coming to lecture and section prepared, and by trying your best on the various elements of the course. I expect you to take ownership of your learning and to reach out to me if you are struggling or have concerns. I expect you to take the opportunity to learn from your peers through activities in lecture and lab section, and I expect you to be respectful and courteous to one another. Finally, I expect you to hold yourself to the highest standards for academic honesty and integrity in your work.</p>"}, {"location": "syllabus/#course-outline", "title": "Course Outline", "text": ""}, {"location": "syllabus/#preparation_1", "title": "Preparation:", "text": "<ul> <li>Fill out the pre-course survey</li> <li>Download and install VS Code</li> <li>Download and install Firefox</li> </ul> <p>If you have any issues with installing the above, please do not hesitate to contact me at albertkun@oarc.ucla.edu.</p> Week Topics 1 Introduction to GIS, data, and ethics 2 Critical Cartography and Civil Society 3 Society, Technology, and Ethics 4 Designing for Civil Society 5 Mentorship and Collaboration  6 Beyond Web Development and Social Change Finals Final presentations"}, {"location": "syllabus/#student-resources-for-support-and-learning", "title": "Student Resources for Support and Learning", "text": ""}, {"location": "syllabus/#providing-feedback", "title": "Providing feedback", "text": "<p>I encourage your feedback at any time throughout the quarter about things that are helping you learn or difficult concepts. Please communicate with me if there are ways that we can improve the course to better support student learning.</p>"}, {"location": "syllabus/#covid-19-accomodations", "title": "COVID-19 Accomodations", "text": "<p>While in-person learning and attendence is strongly encouraged, class lectures will be recorded and provided to all students. To make up for in-person attendence, students are expected to be active on the class discussion board and/or Discord. Feel free to reach out at any point in the quarter if your situation changes and you require further accomodations.</p>"}, {"location": "syllabus/#personal-problems", "title": "Personal Problems", "text": "<p>I understand that sometimes life makes it difficult to focus on schoolwork, especially during COVID-19 times. If you are having a personal problem that affects your participation in this course, please talk to me to create a plan. Please do not wait until the end of the quarter to share any challenges that have negatively impacted your engagement and academic performance.\u00a0The sooner we meet, the more options we will have available\u00a0able to discuss to support your overall academic success.</p>"}, {"location": "syllabus/#academic-accommodations-based-on-a-disability", "title": "Academic Accommodations Based on a Disability", "text": "<p>Students needing academic accommodations based on a disability should contact the Center for Accessible Education (CAE) at (310)825-1501 or in person at Murphy Hall A255. When possible, students should contact the CAE within the first two weeks of the term as reasonable notice is needed to coordinate accommodations. For more information visit www.cae.ucla.edu.</p>"}, {"location": "assignments/", "title": "Index", "text": "", "tags": ["Assignments"]}, {"location": "assignments/#current-assignments", "title": "Current Assignments", "text": "Assignment Type Due Pre-lab: Intro to Web Dev Pre-lab Wednesday 6/26", "tags": ["Assignments"]}, {"location": "assignments/#past-assignments", "title": "Past Assignments", "text": "Assignment Type Due Pre-course Survey Survey Monday 6/24", "tags": ["Assignments"]}, {"location": "assignments/week0/", "title": "Week 0", "text": ""}, {"location": "assignments/week0/#pre-course-survey", "title": "Pre-course survey", "text": "<p>Warning</p> <p>Due before 6/24/2024</p> <ul> <li>Fill out the pre-course survey</li> </ul>"}, {"location": "assignments/week0/#optional-pre-lab-1", "title": "Optional: Pre-lab #1", "text": "<p>You can get a head start by doing the following pre-lab that is due on 6/26:</p> <ol> <li>Sign-up with a GitHub account</li> <li>Download and install Git SCM<sup>1</sup></li> <li>Download and install VS Code</li> <li>Download and install Firefox</li> <li>Read the introduction pages 1, 2, and 3 of Hands On Data Viz (Total reading time 10 - 15 minutes)</li> <li>Read Dealing with files on MDN: </li> </ol> <ul> <li>https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/Dealing_with_files.</li> </ul> <p>Feel free to reach out if you have trouble installing any of the software.</p> <ol> <li> <p>Please be sure to sign-up with a GitHub account before installing Git\u00a0\u21a9</p> </li> </ol>"}, {"location": "assignments/week1/", "title": "Week 1 Assignments List", "text": "<p>Below is the list of all assignments assigned at the start of week 1.</p> <p>Warning</p> <p>Unless specified otherwise, all assignments are due at the beginning of class. Late assignments will be given half credit up until a week.</p> Assignment Type Due Intro to Web Dev Pre-lab Thursday 6/26 ** What are problems with the way we use data and GIS?** Thinking Cap Monday 7/1 An Introduction to Critical Cartography [PDF] Weekly Reading Monday 7/1 <p>|Repository and Readme|Group Assignment|Thursday 7/3| \u2013&gt; &lt;!\u2013 |Intro to Web Maps|Pre-lab|Wednesday 4/13|</p>", "tags": ["Week 1", "Assignments"]}, {"location": "assignments/week1/group_assignment/", "title": "Group Assignment 1: Repository and Readme", "text": "<p>Group List</p> <p>Find your name and group on the spreadsheet to remember which group you are in: https://docs.google.com/spreadsheets/d/1z8Wi2X4Qu1pp10-ArU6qgb9aINBtdKnSybHFJvTTRwE/edit?usp=sharing</p>"}, {"location": "assignments/week1/group_assignment/#due-73", "title": "Due 7/3", "text": "<ol> <li> <p>As a group check-in with me before 7/3 by making an appointment here: https://calendly.com/aa191a/office-hours or emailing me directly (albertkun@oarc.ucla.edu). </p> </li> <li> <p>Have one person create a new repo for the group and invite everyone as collaborators.</p> </li> </ol> <ul> <li>Guide on how to create a new repo and invite</li> </ul> <ol> <li>Add a <code>readme.md</code> to the repository that briefly describes the following in 1-2 sentences:</li> </ol> <ul> <li> <p>What social problem is being addressed?</p> </li> <li> <p>Who is being empowered by your mapplication?</p> </li> <li> <p>What technical and ethical problems could there be in developing this tool?</p> </li> </ul> <p>Markdown tip</p> <p>Markdown is text formatting that is used all over and commonly encountered on GitHub too! Since is your group\u2019s introduction to the world, make sure you use Markdown formatting to style your content properly.  </p> <ol> <li> <p>Post your group members and repository on the discussion board:</p> <ul> <li>https://github.com/albertkun/24SU-ASIAAM-191A/discussions/27</li> </ul> </li> </ol>"}, {"location": "assignments/week1/group_assignment/#extra-credit", "title": "Extra Credit", "text": "<p>Reach out to a non-profit organization that your crowd-sourced mapping application could help support and mention them in the write-up.</p>"}, {"location": "assignments/week1/lab_assignment/", "title": "Lab Assignment #1 - Map and Portfolio", "text": ""}, {"location": "assignments/week1/lab_assignment/#due-73", "title": "Due 7/3", "text": "<p>Time to put your skills to the test and create a home page for the individual maps that you will be making this quarter. Describe some of your interests and include a map with some markers. This is your portfolio, so feel free toadd anything. If you made multiple HTML pages, please link them all to the <code>index.html</code> using the <code>&lt;a href=\"\"&gt;&lt;/a&gt;</code> tag&gt;.</p> <p>Your portfolio must contain the following:</p> <ul> <li>A <code>&lt;h1&gt;</code> tag for your title</li> <li>Add at least 2-3 markers to the map with a common theme, for example organizations you\u2019ve volunteered for or places you\u2019ve traveled.</li> <li>A <code>&lt;h2&gt;</code> or <code>&lt;h3&gt;</code> tag to create a title for your map. </li> <li>A <code>&lt;p&gt;</code> tag for a paragraph describing yourself and your goals as a critical digital map maker.</li> <li>Style CSS by changing the background color, font, or anything else.</li> <li>Use an ordered list <code>&lt;ol&gt;</code> tag and an unordered list <code>&lt;ul&gt;</code> tag to list things.</li> <li>Include an <code>&lt;img&gt;</code> tag with a photo of yourself or an avatar. Feel free to add other images too to give some flavor to your page, like food or desserts.</li> <li>Use the <code>&lt;a&gt;</code> tag to add a link to 2 other web pages.</li> <li>Commit your changes</li> <li>Set up GitHub pages for your repo</li> </ul>"}, {"location": "assignments/week1/lab_assignment/#extra-credit-any-of-these", "title": "Extra Credit: (any of these)", "text": "<ul> <li>Add another link to your own completely different HTML page not <code>index.html</code>. (Be sure to link it to your <code>index.html</code> and describe what you are showing)</li> <li>Add another use of Maplibre </li> <li>Check out the Extra or Maplibre documentation and try something there.</li> </ul>"}, {"location": "assignments/week1/lab_assignment/#submission", "title": "Submission:", "text": "<ul> <li>Commit and publish your file to your repo\u2019s GitHub pages</li> <li> <p>Find your <code>index.html</code> in the <code>week1</code> folder and copy the URL. It should look something like this:</p> </li> <li> <p>https://albertkun.github.io/24su-asiaam-191a-labs/week1/index.html</p> </li> <li> <p>Paste your link as a comment in the Discussion forum for Lab Assignment #1</p> </li> </ul>"}, {"location": "assignments/week1/lab_assignment/#extra-resources", "title": "Extra Resources", "text": ""}, {"location": "assignments/week1/lab_assignment/#html", "title": "HTML", "text": "<ul> <li> <p>Short MDN HTML Syntax (good recap):  https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started</p> </li> <li> <p>Long overview and explanation of HTML: https://geobgu.xyz/web-mapping2/html.html</p> </li> </ul>"}, {"location": "assignments/week1/lab_assignment/#css", "title": "CSS", "text": "<ul> <li>Learn Layout:</li> <li>https://learnlayout.com</li> </ul>"}, {"location": "assignments/week1/lab_assignment/#css-grid", "title": "CSS GRID", "text": "<ul> <li>CSS Grid Garden (game to familiarize yourself with CSS grid):</li> <li> <p>https://cssgridgarden.com/</p> </li> <li> <p>CSS Tricks:</p> </li> <li>https://css-tricks.com/snippets/css/complete-guide-grid/</li> </ul>"}, {"location": "assignments/week1/lab_assignment/#javascript", "title": "JavaScript", "text": "<ul> <li>JavaScript for Cats:</li> <li>http://jsforcats.com/</li> </ul>"}, {"location": "assignments/week1/prelab/", "title": "Pre-Lab #1", "text": "<p>Info</p> <p>Pre-labs consist of the following:</p>"}, {"location": "assignments/week1/prelab/#1-checking-if-your-applications-andor-data-is-ready-for-the-labs", "title": "1. Checking if your applications and/or data is ready for the labs.", "text": ""}, {"location": "assignments/week1/prelab/#2-short-readings-that-provide-additional-technical-information-or-more-background", "title": "2. Short readings that provide additional technical information or more background.", "text": ""}, {"location": "assignments/week1/prelab/#due-before-lab-1-on-626", "title": "Due before Lab #1 on 6/26", "text": "<p>Please have this completed before the lab:</p> <ol> <li>Sign-up with a GitHub account</li> <li>Download and install Git SCM</li> <li>Download and install VS Code</li> <li>Download and install Firefox</li> <li>Read the introduction pages 1, 2, and 3 of Hands On Data Viz (Total reading time 10 - 15 minutes)</li> <li>Read Dealing with files on MDN: </li> </ol> <ul> <li>https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/Dealing_with_files.</li> </ul>"}, {"location": "assignments/week1/prelab/#additional-help", "title": "Additional Help", "text": "<p>Here are guides to help with signing-up with GitHub and installing GitSCM:</p> <ol> <li>How to sign-up for GitHub</li> <li>How to install GitSCM</li> </ol> <p>If you have any further trouble with these steps, be sure reach out to me albertkun@ucla.edu before the lab session.</p>"}, {"location": "assignments/week1/prelab/#optional-technical-readings", "title": "Optional Technical Readings", "text": "<ul> <li>HTML Basics - https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics</li> <li>CSS Basics - https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics</li> <li>JavaScript Basics - https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics</li> </ul>"}, {"location": "assignments/week1/reading/", "title": "Weekly Reading #1", "text": "<p>J. W. Crampton and J. Krygier (2010) \u201cAn Introduction to Critical Cartography\u201d. https://www.researchgate.net/publication/241435510_An_Introduction_to_Critical_Cartography</p> <p>This 15-page article summarizes critical cartography by introducing ethics and modern mapmaking technologies. It should take around 10 - 20 minutes to finish reading.</p> <p>Download PDF \ud83d\udce5 </p>"}, {"location": "assignments/week1/thinking_cap/", "title": "Thinking cap #1", "text": "<p>Prompt</p>"}, {"location": "assignments/week1/thinking_cap/#what-do-you-think-are-problems-with-the-way-we-use-data-and-gis", "title": "What do you think are problems with the way we use data and GIS?", "text": ""}, {"location": "assignments/week1/thinking_cap/#part-1-respond", "title": "Part 1 - Respond", "text": "<p>Respond to the above prompt on GitHub</p> <ul> <li> <p>3 to 5 sentences minimum</p> </li> <li> <p>Feel free to include links and images</p> </li> </ul> <p>For more info see how to submit thinking caps, part 1.</p> <p>Reminder!</p> <p>To be eligible for extra credit, you must complete this part one day before the due date (e.g. 6/30 at 3pm PST).</p>"}, {"location": "assignments/week1/thinking_cap/#part-2-reply", "title": "Part 2 - Reply", "text": "<p>Comment on two other student\u2019s replies.</p> <p>Leave a reply on the posts of two other students, reflecting on what you think of their discussion post. You can ask a thoughtful follow-up question, express similar experiences, and share resources.</p> <p>Info</p> <p>Try to respond to students posts with no replies.</p> <p>For more details see how to submit thinking caps, part 2</p>"}, {"location": "help/", "title": "Help", "text": "<p>If you run into any issues, please check the guides below first. Then feel free to ask on Discord  or the GitHub discussion forums .</p> <p>You can always contact me below if you have questions.</p>"}, {"location": "help/#instructor-contact", "title": "Instructor Contact", "text": "<p>Albert S. Kochaphum (albertkun@ucla.edu)</p>"}, {"location": "help/#office-hours", "title": "Office Hours", "text": "<p>Monday and Wednesdays 5:15pm \u2013 6pm online by appointment below:</p> <ul> <li>https://calendly.com/aa191a/office-hours</li> </ul>"}, {"location": "help/#list-of-class-how-to-guides", "title": "List of class How-To guides", "text": "<p>Below are step-by-step guides on getting started with the course. </p>"}, {"location": "help/#course-related", "title": "Course Related", "text": "<ol> <li> <p>Posting a Thinking Cap</p> </li> <li> <p>Submit Lab Assignments</p> </li> </ol>"}, {"location": "help/#git-related", "title": "Git Related", "text": "<ol> <li> <p>GitHub Sign-Up</p> </li> <li> <p> Installing Git SCM</p> </li> <li> <p> Creating a Repository in GitHub</p> </li> <li> <p>Git Clone in VS Code</p> </li> <li> <p>Committing code to GitHub in VS Code</p> </li> </ol>"}, {"location": "help/final_project_examples/", "title": "A+ Final Projects from 2022", "text": "<p>https://lindseymardona.github.io/group-8/final/index.html</p> <p>https://bittertang.github.io/UCLAsianStories/index.html</p>"}, {"location": "help/final_project_examples/#other-notable-examples", "title": "Other notable examples", "text": "<ul> <li>https://stefuntran.github.io/AAPI-Discrimination/</li> <li>https://kaittli.github.io/aanhpi-healthcare/index.html</li> </ul>"}, {"location": "help/git_cloning/", "title": "Guide for cloning", "text": "<ol> <li> <p>Launch VS Code from Launcher (Mac) or Start Menu (PC)</p> </li> <li> <p>On the <code>Welcome</code> screen click <code>Clone Repository</code>:</p> </li> </ol> <p></p> <ol> <li>Click <code>Clone from GitHub</code></li> </ol> <p></p> <ol> <li>Allow GitHub to sign in Accept the following dialogue box:</li> </ol> <p></p> <ol> <li>Click <code>Continue</code> in the web browser that opens up:</li> </ol> <p></p> <ol> <li>Click <code>Choose Application</code></li> </ol> <p></p> <ol> <li>Click Open Link:</li> </ol> <p></p> <ol> <li>Click <code>Open</code>:</li> </ol> <p></p> <ol> <li>Search for the class repository by typing <code>24SU-191A-AsianAm</code> and     then select the repository: albertkun/24SU-ASIAAM-191A</li> </ol> <p></p> <ol> <li>Select a folder to clone into:</li> </ol> <p></p> <ol> <li>Click <code>Open</code> in your locally cloned repo:</li> </ol> <p></p> <ol> <li>You can see the files by clicking on the Explorer to the right:</li> </ol> <p></p> <ol> <li>Now you are ready for all labs!</li> </ol>"}, {"location": "help/git_commit/", "title": "Guide for using Git Commit in VS Code", "text": ""}, {"location": "help/git_commit/#requirements", "title": "Requirements:", "text": "<ul> <li>Git Clone completed</li> </ul> <p>This guide will walk you through how to push to your lab assignment repo after you have finished your assignments.</p> <ol> <li> <p>Make sure the explorer bar is active</p> </li> <li> <p>Make sure you have changes to commit, for example you should have modified a file (M), created a file (U), or deleted a file (D). </p> </li> <li>Click on \u201cVersion Control\u201d in the Activity Bar </li> <li>Add a commit message that is meaningful </li> <li>Click the checkmark </li> <li>Click the expanded options menu </li> <li>Choose \u201cPush\u201d to push to GitHub </li> <li>Go to your GitHub repository and check to see if your repository has updated. </li> </ol>"}, {"location": "help/git_creating/", "title": "Guide for creating a repository and inviting group members", "text": "<p>This guide is designed to show you how to create a repository and add group members.</p> <ol> <li>After logging in to GitHub click the plus icon and choose <code>New     repository</code>:</li> </ol> <p></p> <ol> <li>Input your group name:</li> </ol> <p></p> <ol> <li>Click <code>Create Repository</code>:</li> </ol> <p></p>"}, {"location": "help/git_creating/#adding-your-partners-as-collaborators", "title": "Adding your partners as collaborators", "text": "<ol> <li>Go to settings:</li> </ol> <ol> <li>Click manage access:</li> </ol> <ol> <li>Click invite a collaborator:</li> </ol> <ol> <li>Search for your teammate\u2019s email or username:</li> </ol> <ol> <li>Click:</li> </ol> <ol> <li>And add:</li> </ol> <ol> <li>Remember to clone the repository locally and start collaborating!</li> </ol>"}, {"location": "help/git_creating/#warnings-about-merge-conflicts", "title": "Warnings about \u201cMerge Conflicts\u201d", "text": "<ol> <li> <p>If you do not use <code>git pull</code> to update periodically update repository and/or push     your changes, you may run into <code>merge conflicts</code> when two files are being edited at the same time.</p> </li> <li> <p>If you do run into a <code>merge conflict</code>, someone should merge the     conflicting files. Please or check out this article on merge conflicts:</p> </li> </ol> <p>https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/addressing-merge-conflicts</p> <ol> <li>We will be covering merge conflicts in detail a little later.</li> </ol>"}, {"location": "help/github_sign_up/", "title": "Guide for signing up to GitHub", "text": "<ol> <li>Go to GitHub.com</li> </ol> <ol> <li>Click on Sign-up</li> </ol> <ol> <li>Create an account:</li> </ol> <ol> <li>Check your email to verify:</li> </ol> <ol> <li>Remember your username and email! It will be necessary for setting up GitSCM!</li> </ol>"}, {"location": "help/gitscm/", "title": "Guide for installing Git SCM", "text": "<ol> <li> <p>Go to: https://git-scm.com/</p> </li> <li> <p>Download and install, based on your operating system below:</p> </li> </ol> PCMac <ol> <li>Run the installer and go through the installation wizard.</li> </ol> <p></p> <ol> <li>Launch the command prompt when done by pressing the <code>Windows</code> key and typing in <code>cmd</code></li> <li>In the command prompt run the command to test your installation:</li> </ol> <pre><code>git --version\n</code></pre> <p>This tests the installation: </p> <p></p> <ul> <li>If it is working, move to step 6</li> <li>If it is not working, send an email or post on the GitHub discussion board.</li> </ul> <p>Note</p> <p>Make sure you have Homebrew installed. If you can run the command \u2018brew\u2019 then you are good to go.</p> <ol> <li> <p>Open launcher and search \u2018Terminal\u2019:  </p> </li> <li> <p>In the terminal then type <code>brew install git</code>:  </p> </li> <li> <p>In the terminal run the command to test your installation:</p> </li> </ol> <pre><code>git --version\n</code></pre> <p>This tests the installation:        </p> <pre><code>  - If it is working, move to **step 6**\n  - If it is not working, send an email or post on the GitHub discussion board.\n</code></pre> <ol> <li>Set our identity to our GitHub username for Git by running:  </li> </ol> <pre><code>git config --global user.name \"YOUR_GITHUB_USERNAME\"\n</code></pre> <p>Important</p> <p>Remember to change <code>\"YOUR_GITHUB_USERNAME\"</code> to your actual GitHub Username and include the double quotes <code>\" \"</code></p> <ol> <li>Now set your email to the email you signed up with GitHub by running :</li> </ol> <pre><code>git config --global user.email YOUR@EMAIL.COM\n</code></pre> <p>Important</p> <p>Remember to change <code>YOUR@EMAIL.COM</code> to your actual GitHub email</p> <ol> <li> <p>Once finished, run the following to check your email and username: <code>git config --list</code></p> </li> <li> <p>If you had any issues, please check this documentation for more     details or reach out for help.</p> </li> <li> <p>Now you are ready to clone a repository in VS Code!</p> </li> </ol>"}, {"location": "help/live_share/", "title": "Quickstart for Live Share", "text": "<p>Make sure you have installed the Live Share extension by going to the following link and clicking on \u201cInstall\u201d: </p> <p>https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare</p> <p></p> <p>You can read the documentation to learn more about Live Share and what it does too:</p> <p>https://docs.microsoft.com/en-us/visualstudio/liveshare/</p> <p>After installing Live Share, you can join a session with these steps:</p>"}, {"location": "help/live_share/#1-click-on-the-join-url", "title": "1. Click on the Join url", "text": "<p>Click the session URL the \u201chost\u201d sent you, which will open it up in a browser. When prompted, allow your browser to launch VS Code</p>"}, {"location": "help/live_share/#2-sign-in-to-github", "title": "2. Sign in to GitHub", "text": "<p>Tip: This will only need be done once.</p> <p>Click on the <code>Live Share</code> status bar item or press <code>Ctrl+Shift+P</code> / <code>Cmd+Shift+P</code> and select the <code>Live Share: Sign In With Browser</code> command. </p>"}, {"location": "help/live_share/#3-working-the-session", "title": "3. Working the session", "text": "<p>After you join, you\u2019ll be immediately presented with the file that the \u201chost\u201d has open, and can see their cursor and any edits they make.</p>"}, {"location": "help/live_share/#4-snapping-windows", "title": "4. Snapping windows", "text": "<p>To make our editing session more efficient, it is highly recommended that after you join the live coding session, that you open a new window for VS Code and snap one window to the left and another to the right.</p> <p>The ideal layout should look something like the following:</p> <p></p> <ul> <li> <p>How to Snap windows on Mac</p> </li> <li> <p>How to Snap windows on PC</p> </li> </ul>"}, {"location": "help/live_share/#optional-host-your-own-session", "title": "Optional: Host your own session", "text": "<p>Click the \u201clive share\u201d button to immediately start sharing your coding session.  An invitation link will automatically be copied to your clip board, you can invite anyone to join your session by sharing it. </p> <p>You can join your own collaboration session by clicking the link yourself. open it in any browser to join your session.</p>"}, {"location": "help/submit/", "title": "How to submit Lab assignments", "text": "<p>Pre-requisites</p> <p> You have committed your code to GitHub</p> <p> You enabled GitHub pages</p> <p>Please refer to lab #1 if you have not done these steps yet.</p>"}, {"location": "help/submit/#go-to-the-discussion-board", "title": "Go to the Discussion board", "text": "<p>https://github.com/albertkun/24SU-ASIAAM-191A/discussions/</p>"}, {"location": "help/submit/#click-on-the-assignment-you-are-submitting", "title": "Click on the assignment you are submitting", "text": ""}, {"location": "help/submit/#paste-the-link-as-a-comment-and-reply", "title": "Paste the link as a comment and reply", "text": ""}, {"location": "help/thinking_caps/", "title": "How to Submit a Thinking Cap Discussion", "text": ""}, {"location": "help/thinking_caps/#part-1-posting-your-own-discussion", "title": "Part 1: Posting your own discussion", "text": "<p>Warning</p> <p>Due at 2pm PST on Mondays, but to be eligible for extra credit you must submit at 2pm PST on Sundays.</p> <ol> <li>Make sure you are signed into your GitHub account. </li> <li>Go to the course website</li> <li>Click on \u201cDiscussions\u201d </li> <li>Click on the \u201cThinking Cap\u201d you are posting for </li> <li>Scroll down to find the comment box: </li> <li>Respond to the prompt for the week. </li> <li>Click Comment to submit: </li> <li>The first part of assignment is now complete!</li> </ol>"}, {"location": "help/thinking_caps/#part-2-responding-to-discussions", "title": "Part 2: Responding to discussions", "text": "<ol> <li> <p>Go to the discussion page on the GitHub repository</p> </li> <li> <p>Try to look for student posts with no replies. </p> </li> <li> <p>Type a thoughtful reply and click Comment .</p> </li> <li> <p>Repeat Steps #8 - #10 for another student.</p> </li> <li> <p>Congratulations on finishing the assignment!</p> </li> </ol>"}, {"location": "labs/", "title": "Summary", "text": "Lab Title Topic #1 GITting down with labs and code Git, HTML, CSS, JS <p>Remember!</p> <p>Unless specified otherwise, all assignments are due at the beginning of class. Late assignments will be given half credit up until a week.</p>"}, {"location": "labs/week1/", "title": "GITting down with labs and code", "text": "", "tags": ["Lab 1"]}, {"location": "labs/week1/#objectives", "title": "Objectives", "text": "<p>Goals</p> <ul> <li>Create a basic webpage</li> <li>Add a map with markers</li> <li>Publish your page onto GitHub pages</li> </ul> <p>Reminder</p> <p>The pre-lab must be completed before attempting this lab.</p>", "tags": ["Lab 1"]}, {"location": "labs/week1/#lab-outline", "title": "Lab outline", "text": "<ol> <li>Using VS Code</li> <li>Writing HTML</li> <li>Writing CSS</li> <li>Adding a Map</li> <li>Publishing with GitHub Pages</li> <li>Final Lab Code</li> </ol> <p>This lab will walk you through the process of creating a static web page in HTML with some additional style elements using CSS. Then you will be tasked to host it using GitHub pages.</p> <p>Note: I highly recommend checking out the MapLibreGL documentation. Looking at any documentation before choosing any software is important, because badly documented libraries can make tools difficult to use. </p>", "tags": ["Lab 1"]}, {"location": "labs/week1/0/", "title": "Let\u2019s get VS Coding!", "text": "<p>Go to https://www.github.com  and make sure you are logged in.</p> <p>Create a new repository by clicking on the  button next to your profile picture:</p> <p></p> <p>Click New repository:</p> <p></p> <p>Give it a name that indicates these will be the assignments for the class:</p> <p></p> <p>Info</p> <p>Repository names should be self explanatory, and they are unique to your account, so don\u2019t worry about having the same name as someone else!</p> <p>Here are some example repository names: </p> <ul> <li> <p><code>24su-asiaam-191a-labs</code></p> </li> <li> <p><code>24su-191a-assignments</code></p> </li> <li> <p><code>aa191-assignments</code></p> </li> </ul> <p>Keep the repository Public, which is in the spirit of sharing, collaboration, and allows anyone to see and improve the code:</p> <p></p> <p>Scroll down to Create Repository:</p> <p></p> <p>Click the Clipboard  button:</p> <p></p> <p>In VS Code  click on: Clone Git Repository</p> <p></p> <p>Paste (PC: Ctrl+V or Mac: Cmd+V) your copied link in the panel above:</p> <p></p> <p>Click on Clone from URL or press Enter :</p> <p></p> <p>Choose a folder to save your files locally to:</p> <p></p> <p>Click on Open this new repository:</p> <p></p> <p>Make sure  Explorer is open in the Activity Bar by clicking on it:</p> <p></p> <p>The open  Explorer should look like this with space to show the files:</p> <p></p> <p>Click the <code>Folder</code> icon to make a new folder:</p> <p></p> <p>Title it <code>week1</code>:</p> <p></p> <p>With the folder selected, click the <code>New file</code> icon and give it the title <code>index.html</code>:</p> <p></p> <p>Make sure <code>index.html</code> is within <code>week1</code>: </p>"}, {"location": "labs/week1/1/", "title": "HTML?! Oh what <code>&lt;tag&gt;</code>gony!", "text": "<p>HTML is what makes up the house for websites. Without it, the CSS and JavaScript cannot function. </p> <p>When HTML is surrounded by an opening <code>&lt;tag&gt;</code> and closing tags<code>&lt;/tag&gt;</code>, it is called an Element:</p> <p><code>&lt;tag&gt; Look Ma'! I'm in a element! &lt;/tag&gt;</code></p> <p>The <code>/</code> of the second tag is used to close a tag. Always be sure to check if you have unclosed elements! Leaving elements unclosed without a closing tag open will break your page. While some tags don\u2019t need to be closed (like the <code>&lt;link&gt;</code> tag), all elements do!</p>"}, {"location": "labs/week1/1/#attributes-in-tags", "title": "Attributes in tags", "text": "<p>We can also decorate tags with attributes to make them unique. </p> <p>You put a keyword declaration inside the <code>tag</code> like so: <code>attribute=\"some value\"</code></p> <p>For example, we can name a tag something:</p> <p><code>&lt;tag name=\"something\"&gt;&lt;/tag&gt;</code></p> <p>But typically, we assign unique names with the <code>id</code> attribute, like so:</p> <p><code>&lt;name id=\"Albert\"&gt;Haha!&lt;/name&gt;</code></p> <p>Wow, that\u2019s my correct name tag! </p>"}, {"location": "labs/week1/1/#boilerplate-vs-template-code", "title": "Boilerplate vs. Template Code", "text": "<p>In coding, boilerplate code is ready to use code that people can freely copy and use with no changes. Think of them as ready-to-eat microwave dinners.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"/&gt;\n  &lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Template code refers to sample code that can be copied and pasted, but requires modifications in order for it to work.</p> <p>Here is our template code:</p> index.html<pre><code>&lt;!DOCTYPE html&gt;&lt;!--(1)! --&gt;\n&lt;html&gt;&lt;!--(2)! --&gt;\n    &lt;head&gt;&lt;!--(3)! --&gt;\n        &lt;title&gt;Hello World with MapLibreGL&lt;/title&gt;&lt;!--(4)! --&gt;\n        &lt;meta charset=\"utf-8\" /&gt;\n        &lt;link rel=\"shortcut icon\" href=\"#\"&gt;\n\n        &lt;!-- I'd add some style if here if I had any --&gt;\n\n    &lt;/head&gt;\n\n    &lt;body&gt;&lt;!--(5)! --&gt;\n        &lt;header&gt;\n            Hello World! &lt;!--(6)! --&gt;\n        &lt;/header&gt;\n\n        &lt;main&gt;\n            &lt;!-- hint: majority of your lab assignment can go here --&gt;\n            &lt;div class=\"portfolio\"&gt;\n                &lt;!-- Portfolio content goes here --&gt;\n            &lt;/div&gt;\n            &lt;div id=\"map\"&gt;\n                &lt;!-- Map will be inserted here --&gt;\n            &lt;/div&gt;\n        &lt;/main&gt;\n\n        &lt;div id=\"footer\"&gt;\nCopyright(2024)\n        &lt;/div&gt;\n\n    &lt;/body&gt;\n&lt;/html&gt;&lt;!--(7)! --&gt;\n</code></pre> <ol> <li>This tells a web browser what type of file this <code>document</code> is.</li> <li>The <code>HTML</code> code begins here.</li> <li>Content in the <code>head</code> tag is not displayed on the page. </li> <li>The <code>title</code> is shown in the browser\u2019s title bar or in the page\u2019s tab.</li> <li>Content in the <code>body</code> contains most of what needs to be displayed.</li> <li>This content in <code>body</code> is what is actually being showed!</li> <li>The <code>HTML</code> code ends here. </li> </ol> <p>Lab Questions</p> <p>What do you observe in the code?</p> <ol> <li> <p>How does this code differ from the boilerplate code?</p> </li> <li> <p>Why should everything be enclosed in the <code>html</code> tag?</p> </li> <li> <p>Do empty spaces matter in HTML?</p> </li> <li> <p>What is a comment and how do you write one?</p> </li> <li> <p>Is there a difference between the <code>class</code> and <code>id</code> attributes?</p> </li> </ol>"}, {"location": "labs/week1/1/#preview-our-file", "title": "Preview our file", "text": "<p>Install the Live Server   extension by clicking this link:</p> <ul> <li>https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer</li> </ul> <p>After you install the extension, click on  Go Live. </p> <p>Your default browser should automatically pop-up, if your default browser is not Firefox , you will need to copy and paste the link over to view it there.</p> <p></p> <p>Not using the Live Server extension</p> <p>If you cannot or do not want to use live server then you will need to right click on your <code>index.html</code> file and <code>reveal in file explorer</code>. Then, double click on the file. Be aware that checking your code in this is not as efficient because there is no auto-reloading feature.</p>"}, {"location": "labs/week1/1/#in-class-exercise-1", "title": "\u26bd In-Class Exercise #1", "text": "<p>Tasks</p> <ol> <li>Let\u2019s fix our code so that it actually looks presentable. </li> <li>Look for the errors in the template code.</li> <li>Save the file and name it <code>index.html</code> and open it in Firefox.</li> </ol> <p>Extra: If you finish early, try to add your own spin to the HTML file!</p>"}, {"location": "labs/week1/1/#adding-an-image", "title": "Adding an image", "text": "<p>To add an image, you will need to use the <code>&lt;img&gt;</code> tag. </p> <pre><code>&lt;img src=\"https://www.example.com/image.jpg\" alt=\"A description of the image\"&gt;\n</code></pre> <p>The <code>src</code> attribute is the location of your file. It is highly recommended to use a URL or a relative path to your image.</p>"}, {"location": "labs/week1/1/#adding-a-local-image", "title": "Adding a local image", "text": "<p>To add a local image, you will need to place the image in the same folder as your <code>index.html</code> file. </p> <p><pre><code>&lt;img src=\"me.png\" alt=\"A description of the image\"&gt;\n</code></pre>  The path to the image is relative to the location of the <code>index.html</code> file.</p> <p>In VS Code, you can drag and drop the image into the folder where your <code>index.html</code> file is located, like so:</p> <p></p>"}, {"location": "labs/week1/1/#checkpoint", "title": "\ud83c\udfc1Checkpoint", "text": "<p>Info</p> <p>Checkpoints are parts if the lab where you should check your work in case something went wrong!</p> <p>Check to see if your code looks likes the following before moving on:</p> index.html<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Hello World&lt;/title&gt;\n        &lt;!-- hint: remember to change your page title! --&gt;\n        &lt;meta charset=\"utf-8\" /&gt;\n        &lt;link rel=\"shortcut icon\" href=\"#\"&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;header&gt;\n            Hello World &lt;!-- hint: you can make a menu with other links here if you'd like --&gt;\n        &lt;/header&gt;\n\n        &lt;main&gt;\n            &lt;!-- hint: majority of your lab assignment can go here --&gt;\n            &lt;div class=\"portfolio\"&gt;\n                &lt;!-- Portfolio content goes here --&gt;\n                 &lt;img src=\"me.png\"&gt;\n            &lt;/div&gt;\n            &lt;div id=\"map\"&gt;\n                &lt;!-- Map will be inserted here --&gt;\n            &lt;/div&gt;\n        &lt;/main&gt;\n\n        &lt;footer id=\"footer\"&gt;\n            Copyright(2024)\n        &lt;/footer&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"}, {"location": "labs/week1/2/", "title": "Cool Stylin\u2019 Sheets", "text": "<p>Let\u2019s add some Cascading Style Sheets (CSS) to customize our page better.</p>"}, {"location": "labs/week1/2/#selectors-the-ba-css-ics", "title": "Selectors: The ba-CSS-ics", "text": "<p>Insert the following code in the <code>&lt;head&gt;</code> right before the closing tag (i.e. <code>&lt;/head&gt;</code>):</p> index.html<pre><code>&lt;style&gt;\n    html { /* (1)! */\n        background-color: aqua;/* (2)! */\n    }\n&lt;/style&gt;\n</code></pre> <ol> <li><code>html</code> is the <code>CSS</code> selector, basically saying, \u201cget anything in the <code>html</code> tags!</li> <li><code>background-color</code> is the key, and then <code>aqua</code> is the color we are setting it to.</li> </ol> <p>What happened to the page?</p> Answer <p>It became <code>aqua</code>!</p>"}, {"location": "labs/week1/2/#special-selectors", "title": "Special selectors", "text": "<p>The <code>*</code> selector is a special selector that selects all elements on the page. This is useful for resetting all margins and paddings to ensure consistency across browsers. Add the following code to the <code>&lt;style&gt;</code> tag:</p> index.html<pre><code>&lt;style&gt;\n    * {\n        font-family: Arial, sans-serif; /*(1)! */\n    }\n&lt;/style&gt;\n</code></pre> <ol> <li><code>font-family</code> is the key, and then <code>Arial, sans-serif</code> is the font we are setting it to.</li> </ol>"}, {"location": "labs/week1/2/#combining-selectors", "title": "Combining selectors", "text": "<p>You can combine selectors to target specific elements. Add the following code to the <code>&lt;style&gt;</code> tag:</p> index.html<pre><code>html, body {\n    height: 100vh;\n}\n</code></pre> <p>This code sets the height of the <code>html</code> and <code>body</code> elements to <code>100vh</code>, which is 100% of the viewport height. This ensures that the content fits the screen height.</p>"}, {"location": "labs/week1/2/#adding-linked-css", "title": "Adding linked CSS", "text": "<p>CSSelecting content and changing them is cool, but what if you want to change the style of multiple pages? You would have to copy and paste the <code>&lt;style&gt;</code> tag into each page!</p> <p>So this way of using CSS, called inline CSS (because it is in the HTML), can make your HTML file long and cumbersome. </p> <p>Standard practice is to have a separate file for CSS and bring that whole file in as a linked source.</p> <p>Click the New Folder  button:</p> <p></p> <p>Type in styles to name the folder <code>styles</code>:</p> <p></p> <p>Highlight the <code>styles</code> folder by clicking on it:</p> <p></p> <p>Then click on the New file  button:</p> <p></p> <p>Name the file style.css:</p> <p></p> <p>Double click to open the new file. Then copy and paste the following CSS:</p> styles/style.css<pre><code>/* The * selects everything and acts as a global reset to ensure consistency across browsers */\n* {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0; /*(4)! */\n    box-sizing: border-box; /*(1)! */\n}\n\n/* Sets the overall background and ensures the content fits the screen height */\nhtml{\n    background-color: aqua; /*(3)! */\n}\n\nhtml, body {\n    height: 80vh; /*(2)! */\n    padding: 1rem; \n}\n\n/* Defines the page layout using a grid */\nbody {\n    display: grid; /*(5)! */\n    grid-template-areas: \n        \"header\"\n        \"main\"\n        \"footer\"; /*(6)! */\n    grid-template-rows: auto 1fr auto; /* Adjusted to reflect the simplified structure */\n}\n\nmain {\n    display: grid; /*(14)! */\n    grid-template-areas:\n        \"portfolio map\"; /*(15)! */\n    grid-template-columns: 1fr 1fr; /*(16)! */\n}\n\n/* Assigns each major section to a part of the grid */\nheader { \n    grid-area: header; /*(7)! */\n}\n\nmain { \n    grid-area: main; /*(8)! */\n}\n\n.portfolio {\n    grid-area: portfolio; /*(13)! */\n}\n\n#map { \n    grid-area: map; /*(9)! */\n    height: 80vh; /*(10)! */\n}\n\nfooter { \n    grid-area: footer; /*(11)! */\n}\n</code></pre> <ol> <li>Box-Sizing: Makes sure padding and border sizes are included in the total width and height of elements, ensuring a consistent starting point across all browsers by resetting margins, padding, and box-sizing.</li> <li>Viewport Height (VH): Calculates the height of the page to be 80% of the viewport height.</li> <li>Background Color: Colors the background of the page in light blue.</li> <li>Padding: Adds space around the content inside <code>html</code> and <code>body</code>.</li> <li>Grid Display: Turns the <code>body</code> into a grid container for layout.</li> <li>Grid Template Areas: Defines the layout areas for the page sections.</li> <li>Header Area: Places the header at the top of the page.</li> <li>Main Area: Places the main content in the middle, now using a grid to organize internal sections.</li> <li>Map Area: Designates an area for the map.</li> <li>Map Height: Specifies how tall the map should be, taking up 80% of the viewport height.</li> <li>Footer Area: Places the footer at the bottom of the page.</li> <li>(Removed)</li> <li>Portfolio Area: Specifies the grid area for the portfolio section within the main area.</li> <li>Main Grid Display: Introduces a grid within the <code>main</code> area to organize the portfolio and map sections.</li> <li>Main Grid Template Areas: Defines the layout for the portfolio and map within the main area.</li> <li>Main Grid Columns: Sets up two columns of equal width for the portfolio and map sections.</li> </ol> <p>Reminder!</p> <p>Remember to save the <code>style.css</code> file (PC:Ctrl+S | Mac:Cmd+S!</p> <p>Next, go back to the index.html file and replace your entire <code>&lt;style&gt; &lt;/style&gt;</code> content and tags with this code:</p> index.html<pre><code>&lt;link rel=\"stylesheet\" href=\"styles/style.css\"&gt;\n</code></pre> <p>This code tells the HTML file to use all of the CSS styles linked in the <code>href</code> attribute.</p> <p>More external CSS files?</p> <p>You can have as many external references as you\u2019d like, as long as you link them in this way. The bottom most CSS file has the most priority because it is the last CSS read and applied!</p>"}, {"location": "labs/week1/2/#in-class-exercise-2", "title": "\u26bd In-Class Exercise #2", "text": "<p>Task</p> <ol> <li>Link <code>MapLibreGL</code>\u2019s CSS that exists at this url: <code>https://unpkg.com/maplibre-gl/dist/maplibre-gl.css</code></li> </ol> <p>Extra: If you finish early, try to see if you can load MapLibreGL\u2019s CSS locally instead!</p> <p>We will go into CSS in more detail later, but what you need to know is that CSS has <code>HTML element selectors</code> which are then followed by the styles in <code>{ }</code>.</p>"}, {"location": "labs/week1/2/#checkpoint", "title": "\ud83c\udfc1Checkpoint", "text": "<ul> <li>Your <code>css</code> file should be in a folder called <code>styles</code> and named <code>style.css</code>.</li> <li>Your <code>index.html</code> file should have a link to the <code>style.css</code> file.</li> <li>Your <code>index.html</code> file should have a link to the <code>maplibre-gl.css</code> file.</li> </ul> <p>Check to see if your code looks likes the following before moving on:</p> index.html<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Hello World with MapLibreGl&lt;/title&gt;\n        &lt;!-- hint: remember to change your page title! --&gt;\n        &lt;meta charset=\"utf-8\" /&gt;\n        &lt;link rel=\"shortcut icon\" href=\"#\"&gt;\n        &lt;link rel=\"stylesheet\" href=\"styles/style.css\"&gt;\n\n        &lt;!-- MapLibreGL's css--&gt;\n        &lt;link rel=\"stylesheet\" href=\"https://unpkg.com/maplibre-gl/dist/maplibre-gl.css\" /&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;header&gt;\n            Hello World\n            &lt;!-- hint: you can make a menu with other links here if you'd like --&gt;\n        &lt;/header&gt;\n\n        &lt;main&gt;\n            &lt;div class=\"portfolio\"&gt;\n                &lt;!-- Portfolio content goes here --&gt;\n                &lt;img src=\"me.png\"&gt;\n            &lt;/div&gt;\n            &lt;div id=\"map\"&gt;&lt;/div&gt;\n        &lt;/main&gt;\n        &lt;div id=\"footer\"&gt;\n            Copyright(2024)\n        &lt;/div&gt;\n        &lt;script src=\"js/init.js\"&gt;&lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> With CommentsWithout Comments styles/style.css<pre><code>/* The * selects everything and acts as a global reset to ensure consistency across browsers */\n* {\n    font-family: Arial, sans-serif; /* Sets a default font for the whole page */\n    margin: 0; /* Removes default margins */\n    padding: 0; /* Removes default padding */\n    box-sizing: border-box; /* Makes sure borders and paddings are included in the element's total width and height */\n}\n\n/* Sets the background color of the whole page and ensures content fits the screen height */\nhtml {\n    background-color: aqua; /* Sets a light blue background color */\n}\n\n/* Applies to both &lt;html&gt; and &lt;body&gt; */\nhtml, body {\n    height: 80vh; /* Sets the height to 80% of the viewport height, making sure the content fits on the screen */\n    padding: 1rem; /* Adds a bit of space around the content for better readability */\n    box-sizing: border-box; /* Ensures padding does not add to the set height */\n}\n\n/* Defines the main layout of the page using CSS Grid */\nbody {\n    display: grid; /* Enables CSS Grid layout */\n    grid-template-areas: \n        \"header\" /* Top area for the header */\n        \"main\"   /* Middle area for the main content */\n        \"footer\"; /* Bottom area for the footer */\n    grid-template-rows: auto 1fr auto; /* Sizes: auto for header and footer to fit content, 1fr for main to fill remaining space */\n}\n\n/* Sets up the layout for the main content area, dividing it into two columns */\nmain {\n    display: grid; /* Enables CSS Grid within the main element */\n    grid-template-areas:\n        \"portfolio map\"; /* Divides the main area into portfolio and map sections side by side */\n    grid-template-columns: 1fr 1fr; /* Allocates equal width to both sections */\n}\n\n/* Grid area assignments for each major section, linking them to their respective areas in the grid */\nheader { \n    grid-area: header; /* Assigns the header to its grid area */\n}\n\nmain { \n    grid-area: main; /* Assigns the main content to its grid area */\n}\n\n.portfolio {\n    grid-area: portfolio; /* Assigns the portfolio section to its grid area */\n}\n\n#map { \n    grid-area: map; /* Assigns the map section to its grid area */\n    height: 80vh; /* Sets the map's height to 80% of the viewport height */\n}\n\nfooter { \n    grid-area: footer; /* Assigns the footer to its grid area */\n}\n</code></pre> styles/style.css<pre><code>* {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nhtml {\n    background-color: aqua;\n}\n\nhtml, body {\n    height: 80vh;\n    padding: 1rem;\n    box-sizing: border-box;\n}\n\nbody {\n    display: grid;\n    grid-template-areas: \n        \"header\"\n        \"main\"\n        \"footer\";\n    grid-template-rows: auto 1fr auto;\n}\n\nmain {\n    display: grid;\n    grid-template-areas:\n        \"portfolio map\";\n    grid-template-columns: 1fr 1fr;\n}\n\nheader { \n    grid-area: header;\n}\n\nmain { \n    grid-area: main;\n}\n\n.portfolio {\n    grid-area: portfolio;\n}\n\n#map { \n    grid-area: map;\n    height: 80vh;\n}\n\nfooter { \n    grid-area: footer;\n}\n</code></pre>"}, {"location": "labs/week1/3/", "title": "Basics of JavaScript", "text": "<p>Recall from the pre-lab reading that a webpage is like a house:</p> <ul> <li>HTML is the scaffolding/foundation of the house</li> <li>CSS is the paint, carpets, etc. that makes the house look nice</li> <li>JavaScript is the appliances that adds function to the house</li> </ul>"}, {"location": "labs/week1/3/#why-start-with-html-and-css-first", "title": "Why start with HTML and CSS first?", "text": "<p>In order to do any JavaScript coding, you need to make sure your content has a place to show up! </p>"}, {"location": "labs/week1/3/#what-is-javascript", "title": "What is JavaScript?", "text": "<p>JavaScript is like the scriptwriter behind the scenes, turning static web pages into dynamic, interactive stories that captivate the audience. While there are various frameworks like React.js and Vue.js that offer additional features, this class will focus on the basics of JavaScript, also known as \u201cvanilla\u201d JavaScript, following the ES6+ standards. Learn more about ES6+ standards here.</p> <p>In HTML, we use <code>&lt;script&gt;</code> tags to include JavaScript code. These tags can be placed in two main spots:</p> <ol> <li>Inside the <code>&lt;head&gt;</code> section: JavaScript here loads before anything else on the page. This is a good spot for scripts that need to set things up before the page shows to the user.</li> <li>Inside the <code>&lt;body&gt;</code> section or right before the closing <code>&lt;/body&gt;</code> tag: This is where you typically put JavaScript that affects the content of the page. Since it loads after the HTML, it ensures all your page elements are loaded before the script tries to interact with them.</li> </ol> <p>For our purposes, especially when working with libraries like <code>MapLibreGL.js</code>, it\u2019s important to load the library first. This means placing the <code>MapLibreGL.js</code> script in the <code>&lt;head&gt;</code> to ensure it\u2019s loaded and ready to go. Our custom JavaScript, which might interact with or initialize the map, should come later, ideally at the end of the <code>&lt;body&gt;</code> section. You can even place it in a <code>&lt;footer&gt;</code> tag to keep things organized and ensure it loads at the right time.</p> <p>Remember, the order in which scripts are loaded can make or break your webpage- imagine putting the ending of a mystery movie at the beginning!</p>"}, {"location": "labs/week1/3/#its-a-me-lego-var-io", "title": "It\u2019s a me Lego <code>Var</code>-io", "text": "<p>Variables are like boxes that hold information, try to think of them as the building blocks of the instructions.</p> <p>Variables are the Lego blocks of programming and can be numbers, text, or even collections of other variables! In programming languages we call variables can be classified into types. In order to use a variable, you have to declare variables. With JavaScript, variables are automatically assigned types based on their declaration. </p> <p>In JavaScript all declarations and lines should end with a semicolon <code>;</code>, which is like a <code>. (period)</code> in English that says, my statement is done.</p> <p>These are examples of a declaration:</p> <pre><code>var day = 8;\nvar name = \"Albert\";\n</code></pre> <p>In front you see the <code>var</code> keyword that tells the web browser, \u201cHey this is a variable!\u201d. In this example, <code>day</code> is a numeric type with a value of <code>8</code> and <code>name</code> is a string type. Each type has certain properties and uses, for example you can add numbers together using something like <code>day + day</code>, but you adding strings will simply concatenate and not total them.</p> <p>What is a keyword?</p> <p>In most coding languages, a keyword is a word that tells a program to treat the following text, numbers, or characters in a specific way. For example, <code>var myName</code> says treat <code>myName</code> as a variable.  This means you CANNOT name a variable <code>var</code>, Jar Jar Binks cousin Var Var Binks is VARy bad for JavaScript to see! i.e. <code>var var</code> Also note, you cannot use <code>spaces</code> in variable names!</p>"}, {"location": "labs/week1/3/#some-more-variable-definitions", "title": "Some more variable definitions", "text": "<p>What we really need to understand about variables is that they act like boxes where you can store or take information out of. - <code>const</code> acts like a locked safe that will not let you put anything into it after you define it - <code>let</code> is like a regular box. -  <code>var</code> is <code>VARy</code> problematic because it can be both locked and unlocked</p> <p>Here are some of the types in JavaScript:</p> <pre><code>//number\nlet box1 = 5;\nlet box2 = 5.0;\n\n//string\nlet box3 = 'five';\nlet box4 = \"five\";\n\n// string literal, uses backticks and ${variable} to bring in another variable\nlet box5 = `this is from box #4: ${box4}`;\n\n// array\nlet box6 = [1,2,3,4,5]; \n\n// object, stores variables together, can be of different types!\nlet box7 = {\"number\": 'five', \"value\":5};\n\n// boolean (true or false)\nlet box8 = true;\n\n// null value\nlet emptyBox;\n</code></pre> <p>Remember, to declare a variable (give it a value) you must use the  <code>=</code> symbol, like so:</p> <pre><code>let my_variable = \"exist!\";\n</code></pre> <p>Anatomy of a variable declaration</p> <ul> <li><code>let</code> is the keyword declaration of a variable</li> <li><code>my_variable</code> is the variable\u2019s name</li> <li><code>\"exist!\"</code> is the value for this variable</li> <li><code>;</code> defines the end of a line in JavaScript </li> </ul>"}, {"location": "labs/week1/3/#lets-a-go", "title": "LET\u2019s a go!", "text": "<p>With JavaScript ES6, <code>let</code> and <code>const</code> keywords were introduced to declare variables. This change means that the recommend practice is to no longer use the <code>var</code> keyword. <code>let</code> and <code>const</code> variables get declared in the same way:</p> <pre><code>let day = 8; //(1)!\nconst name = \"Albert\"; // (2)!\n</code></pre> <ol> <li>The <code>let</code> keyword LETS a variable CHANGE! </li> <li>The <code>const</code> keyword declaration keeps a variable CONSTant!</li> </ol>"}, {"location": "labs/week1/3/#let-vs-const-vs-var", "title": "Let vs Const vs Var", "text": "<p>What is the difference?</p> <ol> <li>The <code>let</code> keyword declaration LETS a variable change</li> <li>The <code>const</code> keyword delcaration a variable CONSTant and will never change.</li> <li>The <code>var</code> allows varaibles to change or never change depending on where it was declared! VERY PROBLEMATIC!</li> </ol> <p>Because <code>var</code> can be changing (mutable) and unchanging at the same time, so <code>var</code> was changed into off into two different variable types, <code>let</code> and <code>const</code>.</p> <p>Scopes: Local vs. Global</p> <p>Where you <code>declare</code> a variable sets the scope to either a local one (limited to a function or area in the code) or global (can be accessed by anything/anywhere else in the code).</p> <p>So, bye bye <code>var</code> and <code>LET</code> us welcome our new <code>CONST</code> variables to the JavaScript programming world.</p> <p>TLDR</p> <p>DO NOT USE <code>var</code> unless you need to code for Internet Explorer.</p>"}, {"location": "labs/week1/3/#consolelog", "title": "Console.log()", "text": "<p>By itself, our script tag does nothing. So, one VERY helpful JavaScript tool (method) that we should familarize ourself with is <code>console.log()</code>, because it allows us to test our code.</p> <p>Add the following script: <pre><code>&lt;script&gt;\n    console.log('Hello Asian Am 191! :)');\n&lt;/script&gt;\n</code></pre></p>"}, {"location": "labs/week1/3/#nothing-happened-what", "title": "Nothing happened?! What!?", "text": "<p>Actually, you are about to unlock your full web developer potential! </p> <p>In Firefox, right click anywhere on the page and the click <code>Inspect Element</code>:  This opens the <code>Developer Toolbar</code>!! You can find it by going to the Menu and going to <code>Web Developer</code> and then <code>Web Developer Tools</code>.</p> <p>Click on the Console button:</p> <p></p> <p>Yay! Our message is there!</p> <p></p>"}, {"location": "labs/week1/3/#linking-to-another-javascript-file", "title": "Linking to another JavaScript file", "text": "<p>Similar to the CSS files, we can move the JavaScript file into its own folder to avoid cluttering the HTML file. Importing libraries is the main way we level up our webpage.</p> <p>BUT!!! Instead of <code>&lt;link&gt;</code> we use the <code>&lt;script&gt;</code> tag:</p> <pre><code> &lt;script src=\"YOUR_SCRIPT_NAME.js\"&gt;&lt;/script&gt; \n</code></pre> <p>The <code>src</code> attribute is location of your file.</p>"}, {"location": "labs/week1/3/#in-class-exercise-2", "title": "In-class Exercise #2", "text": "Answer  1. Click on the `New Folder` button:  ![](./media/answerJS.png)  2. Type in `js`:  ![](./media/answerJS2.png)  3. Click on the `New File` button:  ![](./media/answerJS3.png)  4. Give it a name, like `init.js`  ![](./media/answerJS4.png)  5. Within `index.html` before the end of the `` element include the following:  <pre><code>    //\n    // ... HTML Truncated for brevity ...\n    // \n    &lt;script src=\"./js/init.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>"}, {"location": "labs/week1/3/#task", "title": "Task:", "text": "<ul> <li>Create a new folder called <code>js</code></li> <li>Add our script in there</li> <li>Get our message to show up in the console </li> </ul>"}, {"location": "labs/week1/3/#hint", "title": "Hint", "text": "<p>Never include <code>&lt;script&gt;&lt;/script&gt;</code> tags inside of a Javascript file, those are <code>HTML elements</code>!!!</p>"}, {"location": "labs/week1/3/#hello-maplibregl-finally", "title": "Hello MapLibreGL\u2026 Finally..", "text": "<p>OK, why did we do ALL of that? Well, when we use MapLibreGL, we actually need to bring in MapLibreGL\u2019s JavaScript files!</p> <p>So, in our header, let\u2019s add the following:</p> <pre><code>&lt;!-- MapLibreGL's JavaScript--&gt;\n&lt;script src=\"https://unpkg.com/maplibre-gl/dist/maplibre-gl.js\"&gt;&lt;/script&gt;\n</code></pre> <p>Now, let\u2019s go ahead and add a container for our map. </p> <p>After <code>&lt;div id=\"main\"&gt;&lt;/div&gt;</code> add a new <code>&lt;div&gt;&lt;/div&gt;</code> tag, and give it an ID attribute of \u201cmap\u201d:</p> <pre><code>&lt;div id=\"map\"&gt;&lt;/div&gt;\n</code></pre> <p>With our container ready to go, open up the JavaScript file again and add the following MapLibreGL code template:</p> <pre><code>// Initialize the map\nconst map = new maplibregl.Map({\n    container: 'map', // container ID\n    style: 'https://api.maptiler.com/maps/streets/style.json?key=get_your_own_OpIi9ZULNHzrESv6T2vL', // Your style URL\n    center: [34.0709, -118.444], // Starting position [lng, lat]\n    zoom: 15 // Starting zoom level\n});\n\n// Add a marker to the map\nnew maplibregl.Marker()\n    .setLngLat([34.0709, -118.444])\n    .setPopup(new maplibregl.Popup({ offset: 25 }) // Add popups\n        .setHTML('Math Sciences 4328 aka the Technology Sandbox&lt;br&gt; is the lab where I used to work in '))\n    .addTo(map);\n</code></pre>"}, {"location": "labs/week1/3/#class-exercise-3-adding-more-markers", "title": "Class Exercise #3 - Adding more markers", "text": "<ul> <li>Looking at the code above a little bit, we can see some latitude/longitude pairs. Copy the marker code add more markers of your choosing. Note: Be sure give the marker variable a new name, like <code>marker2</code>.  </li> <li>To find latitude/longitude of coordinates, please use this website:</li> <li> <p>https://www.latlong.net/</p> </li> <li> <p>Optional: Not happy with the basemap? See if you can switch the basemap out by visiting here and the changing <code>L.tileLayer</code>: </p> </li> <li>https://MapLibreGL-extras.github.io/MapLibreGL-providers/preview/</li> </ul>"}, {"location": "labs/week1/3/#checkpoint", "title": "\ud83c\udfc1Checkpoint", "text": "<ul> <li>Your <code>index.html</code> should have a <code>&lt;div&gt;</code> with an ID of <code>map</code></li> <li>Your <code>init.js</code> should have the MapLibreGL code template</li> <li>Your <code>init.js</code> should be linked in your <code>index.html</code> file</li> </ul>"}, {"location": "labs/week1/3/#check-your-work", "title": "Check your work", "text": "<p>Check to see if your code looks likes the following before moving on:</p> index.html<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Hello World with MapLibreGl&lt;/title&gt;\n        &lt;!-- hint: remember to change your page title! --&gt;\n        &lt;meta charset=\"utf-8\" /&gt;\n        &lt;link rel=\"shortcut icon\" href=\"#\"&gt;\n        &lt;link rel=\"stylesheet\" href=\"styles/style.css\"&gt;\n\n        &lt;!-- MapLibreGL's css--&gt;\n        &lt;link rel=\"stylesheet\" href=\"https://unpkg.com/maplibre-gl/dist/maplibre-gl.css\" /&gt;\n\n        &lt;!-- MapLibreGL's JavaScript--&gt;\n        &lt;script src=\"https://unpkg.com/maplibre-gl/dist/maplibre-gl.js\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;header&gt;\n            Hello World\n            &lt;!-- hint: you can make a menu with other links here if you'd like --&gt;\n        &lt;/header&gt;\n\n        &lt;main&gt;\n            &lt;div class=\"portfolio\"&gt;\n                &lt;!-- Portfolio content goes here --&gt;\n                &lt;img src=\"me.png\"&gt;\n            &lt;/div&gt;\n            &lt;div id=\"map\"&gt;&lt;/div&gt;\n        &lt;/main&gt;\n        &lt;div id=\"footer\"&gt;\n            Copyright(2024)\n        &lt;/div&gt;\n        &lt;script src=\"js/init.js\"&gt;&lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> js/init.js<pre><code>// Initialize the map\nconst map = new maplibregl.Map({\n    container: 'map', // container ID\n    style: 'https://api.maptiler.com/maps/streets/style.json?key=get_your_own_OpIi9ZULNHzrESv6T2vL', // Your style URL\n    center: [34.0709, -118.444], // Starting position [lng, lat]\n    zoom: 15 // Starting zoom level\n});\n\n// Add a marker to the map\nnew maplibregl.Marker()\n    .setLngLat([34.0709, -118.444])\n    .setPopup(new maplibregl.Popup({ offset: 25 }) // Add popups\n        .setHTML('Math Sciences 4328 aka the Technology Sandbox&lt;br&gt; is the lab where I used to work in '))\n    .addTo(map);\n</code></pre> With CommentsWithout Comments styles/style.css<pre><code>/* Global reset to ensure consistency across browsers */\n* {\n    font-family: Arial, sans-serif; /* Sets a default font for the whole page */\n    margin: 0; /* Removes default margins */\n    padding: 0; /* Removes default padding */\n    box-sizing: border-box; /* Makes sure borders and paddings are included in the element's total width and height */\n}\n\n/* Sets the background color of the whole page and ensures content fits the screen height */\nhtml {\n    background-color: aqua; /* Sets a light blue background color */\n}\n\n/* Applies to both &lt;html&gt; and &lt;body&gt; */\nhtml, body {\n    height: 80vh; /* Sets the height to 80% of the viewport height, making sure the content fits on the screen */\n    padding: 1rem; /* Adds a bit of space around the content for better readability */\n    box-sizing: border-box; /* Ensures padding does not add to the set height */\n}\n\n/* Defines the main layout of the page using CSS Grid */\nbody {\n    display: grid; /* Enables CSS Grid layout */\n    grid-template-areas: \n        \"header\" /* Top area for the header */\n        \"main\"   /* Middle area for the main content */\n        \"footer\"; /* Bottom area for the footer */\n    grid-template-rows: auto 1fr auto; /* Sizes: auto for header and footer to fit content, 1fr for main to fill remaining space */\n}\n\n/* Sets up the layout for the main content area, dividing it into two columns */\nmain {\n    display: grid; /* Enables CSS Grid within the main element */\n    grid-template-areas:\n        \"portfolio map\"; /* Divides the main area into portfolio and map sections side by side */\n    grid-template-columns: 1fr 1fr; /* Allocates equal width to both sections */\n}\n\n/* Grid area assignments for each major section, linking them to their respective areas in the grid */\nheader { \n    grid-area: header; /* Assigns the header to its grid area */\n}\n\nmain { \n    grid-area: main; /* Assigns the main content to its grid area */\n}\n\n.portfolio {\n    grid-area: portfolio; /* Assigns the portfolio section to its grid area */\n}\n\n#map { \n    grid-area: map; /* Assigns the map section to its grid area */\n    height: 80vh; /* Sets the map's height to 80% of the viewport height */\n}\n\nfooter { \n    grid-area: footer; /* Assigns the footer to its grid area */\n}\n</code></pre> styles/style.css<pre><code>* {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nhtml {\n    background-color: aqua;\n}\n\nhtml, body {\n    height: 80vh;\n    padding: 1rem;\n    box-sizing: border-box;\n}\n\nbody {\n    display: grid;\n    grid-template-areas: \n        \"header\"\n        \"main\"\n        \"footer\";\n    grid-template-rows: auto 1fr auto;\n}\n\nmain {\n    display: grid;\n    grid-template-areas:\n        \"portfolio map\";\n    grid-template-columns: 1fr 1fr;\n}\n\nheader { \n    grid-area: header;\n}\n\nmain { \n    grid-area: main;\n}\n\n.portfolio {\n    grid-area: portfolio;\n}\n\n#map { \n    grid-area: map;\n    height: 80vh;\n}\n\nfooter { \n    grid-area: footer;\n}\n</code></pre>"}, {"location": "labs/week1/4/", "title": "Let\u2019s Git to Committing!", "text": "<p>Make sure GIT is installed!</p> <p>Before you can commit, you need to make sure that you have <code>Git</code> installed. If you don\u2019t have it installed, please follow the instructions here.</p> <p>Commits are the basis of <code>Git</code> and <code>GitHub</code>.</p> <p>Do not upload manually!</p> <p>While it may be tempting to manually upload files through GitHub, for the purposes of this class, this will cause many headaches. For this class you should only commit through VS Code!!!</p> <p>In a nutshell, Committing is <code>Git</code> speak for saving files. However, these saves come with a note so that you can refer back to save later!</p> <p>It\u2019s better than autosaving because you have a description of what that save is!</p> <p>Let\u2019s make our first commit:</p> <p>Click on the <code>Source Control</code> icon in the activity bar in VS Code:</p> <p></p> <p>Enter a note for your commit:</p> <p></p> <p>Click the <code>checkmark</code> OR use the following shortcut:</p> <ul> <li> <p>PC: Ctrl+Enter</p> </li> <li> <p>MAC: Cmd+Enter</p> </li> </ul> <p></p> <p>Next, click on the <code>...</code> for expanding the menu items:</p> <p></p> <p>Finally, click on <code>Push</code> to upload your changes to GitHub:</p> <p></p> <p>If you see the <code>VS Code periodically wants to run fetch</code> dialogue, click <code>Yes</code> to allow it to randomly update your repository.</p> <p></p>"}, {"location": "labs/week1/4/#optional-easier-commits", "title": "Optional: Easier Commits", "text": "<p>Timesaving Tip!</p> <p>You can avoid having to do the extra steps of clicking <code>...</code> then <code>push</code> by turning on a setting to <code>push</code> after each commit!</p> <p>Here\u2019s how to do so:</p> <ul> <li>Go to <code>File</code> -&gt; <code>Prefences</code> -&gt; Settings</li> </ul> <p></p> <ul> <li>Search post commit in the text box at the top</li> </ul> <p></p> <ul> <li>Change the setting from <code>none</code> to push</li> </ul> <p></p> <ul> <li>Now the next time you commit by pressing the following shortcut, it will push automatically!</li> <li>PC: Ctrl+Enter</li> <li>MAC: Cmd+Enter</li> </ul> <p></p>"}, {"location": "labs/week1/4/#using-github-pages", "title": "Using GitHub Pages", "text": "<p>After you have saved and committed your files to GitHub visit your repository on https://www.github.com.</p> <p>What is a repository?</p> <p>A repository is GitHub speak for location for a specific project and/or bunch of files. You can think of it as <code>folder</code>. For this class, instead of making a new repository for each week we will have just one lab assignment repository with different folders for the weeks. Learn more about repositories here: About repositories (GitHub.com).</p> <p>You can find your repositories by clicking on your profile picture:</p> <p></p> <p>Then click on Your repositories</p> <p></p> <p>Find your assignment repository and click on it:</p> <p></p> <p>Click on Settings:</p> <p></p> <p>Click on Pages:</p> <p></p> <p>and under Source , click on the main branch <sup>1</sup>:</p> <p></p> <p>Choose root:</p> <p></p> <p>Click on Save:</p> <p></p> <p>Copy this link:</p> <p></p> <p>Nothing shows up?!\ud83d\ude31</p> <p>If you navigate to <code>https://YOUR_GITHUB_ACCOUNT.github.io/23s-asiaam-191a-assignments/</code> it will be blank because there\u2019s nothing in the <code>root</code>.</p> <p>You have to add <code>/YOUR_WEEK_1_FOLDER_NAME/index.html</code> to access the contents of the lab!</p> <p>For example, <code>https://albertkun.github.io/23s-asiaam-191a-assignments/week1/index.html</code></p> <p>Post it in the Discussion forum for the appropriate lab:</p> <p></p> <p>Paste your link in the comment box at the bottom</p> <p></p> <p>Click on Comment to submit the lab:</p> <p></p> <ol> <li> <p>Your branch may be called master if your repo was created in VS Code. Read more about why here.\u00a0\u21a9</p> </li> </ol>"}, {"location": "labs/week1/5/", "title": "\u2705 Final Template Code", "text": "index.html<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Hello World with MapLibreGl&lt;/title&gt;\n        &lt;!-- hint: remember to change your page title! --&gt;\n        &lt;meta charset=\"utf-8\" /&gt;\n        &lt;link rel=\"shortcut icon\" href=\"#\"&gt;\n        &lt;link rel=\"stylesheet\" href=\"styles/style.css\"&gt;\n\n        &lt;!-- MapLibreGL's css--&gt;\n        &lt;link rel=\"stylesheet\" href=\"https://unpkg.com/maplibre-gl/dist/maplibre-gl.css\" /&gt;\n\n        &lt;!-- MapLibreGL's JavaScript--&gt;\n        &lt;script src=\"https://unpkg.com/maplibre-gl/dist/maplibre-gl.js\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;header&gt;\n            Hello World\n            &lt;!-- hint: you can make a menu with other links here if you'd like --&gt;\n        &lt;/header&gt;\n\n        &lt;main&gt;\n            &lt;div class=\"portfolio\"&gt;\n                &lt;!-- Portfolio content goes here --&gt;\n                &lt;img src=\"me.png\"&gt;\n            &lt;/div&gt;\n            &lt;div id=\"map\"&gt;&lt;/div&gt;\n        &lt;/main&gt;\n        &lt;div id=\"footer\"&gt;\n            Copyright(2024)\n        &lt;/div&gt;\n        &lt;script src=\"js/init.js\"&gt;&lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> js/init.js<pre><code>// Initialize the map\nconst map = new maplibregl.Map({\n    container: 'map', // container ID\n    style: 'https://api.maptiler.com/maps/streets/style.json?key=get_your_own_OpIi9ZULNHzrESv6T2vL', // Your style URL\n    center: [34.0709, -118.444], // Starting position [lng, lat]\n    zoom: 15 // Starting zoom level\n});\n\n// Add a marker to the map\nnew maplibregl.Marker()\n    .setLngLat([34.0709, -118.444])\n    .setPopup(new maplibregl.Popup({ offset: 25 }) // Add popups\n        .setHTML('Math Sciences 4328 aka the Technology Sandbox&lt;br&gt; is the lab where I used to work in '))\n    .addTo(map);\n</code></pre> Without CommentsWith Comments styles/style.css<pre><code>* {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nhtml {\n    background-color: aqua;\n}\n\nhtml, body {\n    height: 80vh;\n    padding: 1rem;\n    box-sizing: border-box;\n}\n\nbody {\n    display: grid;\n    grid-template-areas: \n        \"header\"\n        \"main\"\n        \"footer\";\n    grid-template-rows: auto 1fr auto;\n}\n\nmain {\n    display: grid;\n    grid-template-areas:\n        \"portfolio map\";\n    grid-template-columns: 1fr 1fr;\n}\n\nheader { \n    grid-area: header;\n}\n\nmain { \n    grid-area: main;\n}\n\n.portfolio {\n    grid-area: portfolio;\n}\n\n#map { \n    grid-area: map;\n    height: 80vh;\n}\n\nfooter { \n    grid-area: footer;\n}\n</code></pre> styles/style.css<pre><code>/* The * selects everything and acts as a global reset to ensure consistency across browsers */\n* {\n    font-family: Arial, sans-serif; /* Sets a default font for the whole page */\n    margin: 0; /* Removes default margins */\n    padding: 0; /* Removes default padding */\n    box-sizing: border-box; /* Makes sure borders and paddings are included in the element's total width and height */\n}\n\n/* Sets the background color of the whole page and ensures content fits the screen height */\nhtml {\n    background-color: aqua; /* Sets a light blue background color */\n}\n\n/* Applies to both &lt;html&gt; and &lt;body&gt; */\nhtml, body {\n    height: 80vh; /* Sets the height to 80% of the viewport height, making sure the content fits on the screen */\n    padding: 1rem; /* Adds a bit of space around the content for better readability */\n    box-sizing: border-box; /* Ensures padding does not add to the set height */\n}\n\n/* Defines the main layout of the page using CSS Grid */\nbody {\n    display: grid; /* Enables CSS Grid layout */\n    grid-template-areas: \n        \"header\" /* Top area for the header */\n        \"main\"   /* Middle area for the main content */\n        \"footer\"; /* Bottom area for the footer */\n    grid-template-rows: auto 1fr auto; /* Sizes: auto for header and footer to fit content, 1fr for main to fill remaining space */\n}\n\n/* Sets up the layout for the main content area, dividing it into two columns */\nmain {\n    display: grid; /* Enables CSS Grid within the main element */\n    grid-template-areas:\n        \"portfolio map\"; /* Divides the main area into portfolio and map sections side by side */\n    grid-template-columns: 1fr 1fr; /* Allocates equal width to both sections */\n}\n\n/* Grid area assignments for each major section, linking them to their respective areas in the grid */\nheader { \n    grid-area: header; /* Assigns the header to its grid area */\n}\n\nmain { \n    grid-area: main; /* Assigns the main content to its grid area */\n}\n\n.portfolio {\n    grid-area: portfolio; /* Assigns the portfolio section to its grid area */\n}\n\n#map { \n    grid-area: map; /* Assigns the map section to its grid area */\n    height: 80vh; /* Sets the map's height to 80% of the viewport height */\n}\n\nfooter { \n    grid-area: footer; /* Assigns the footer to its grid area */\n}\n</code></pre> <p>```</p> <p>Now you should be ready to take on the lab assignment!</p>"}, {"location": "labs/week1/extra/", "title": "Extra", "text": ""}, {"location": "labs/week1/extra/#exploration", "title": "Exploration:", "text": "<p>If you\u2019d rather use icons then a circular color, then try to see if you can implement this code, be sure to have a custom icon ready!</p>"}, {"location": "labs/week1/extra/#customizing-icons", "title": "Customizing Icons", "text": "<pre><code>function createCustomIcon (feature, latlng) {\n    // Create a DOM element for the marker\n    const el = document.createElement('div');\n    el.style.backgroundImage = 'url(my-icon.png)';\n    el.style.width = '25px'; // iconSize width\n    el.style.height = '25px'; // iconSize height\n    el.style.backgroundSize = '100%';\n    el.style.display = 'block';\n    el.style.borderRadius = '50%'; // Optional: makes the icon circular\n    el.style.boxShadow = '0px 0px 20px rgba(0, 0, 0, 0.5)'; // Optional: adds shadow effect\n\n  return new maplibregl.Marker(el)\n    .setLngLat([latlng.lng, latlng.lat]); // Ensure the order is longitude, latitude\n}\n</code></pre> <p>The following code will add a geojson called <code>ca_counties.geojson</code> with a field <code>TOTAL_POP</code> onto your map:</p> <pre><code>// Step 1: Load GeoJSON Data\nmap.on('load', function() {\n  // Step 2: Add a GeoJSON Source\n  map.addSource('ca_counties', {\n    type: 'geojson',\n    data: 'js/lab1.geojson' // Path to your GeoJSON file\n  });\n\n  // Step 3: Add a Layer for the GeoJSON Data\n  map.addLayer({\n    id: 'counties',\n    type: 'fill',\n    source: 'ca_counties',\n    layout: {},\n    paint: {\n      'fill-color': [\n        'step',\n        ['get', 'TOTAL_POP'],\n        '#FFEDA0', 10000,\n        '#FED976', 200000,\n        '#FEB24C', 500000,\n        '#BD0026', 1000000,\n        '#800026'\n      ],\n      'fill-opacity': 0.7\n    }\n  });\n\n  // Optional: Add a popup on click\n  map.on('click', 'counties', function(e) {\n    new mapboxgl.Popup()\n      .setLngLat(e.lngLat)\n      .setHTML(e.features[0].properties.name)\n      .addTo(map);\n  });\n\n  // Change the cursor to a pointer when over the layer.\n  map.on('mouseenter', 'counties', function() {\n    map.getCanvas().style.cursor = 'pointer';\n  });\n\n  // Change it back to a default cursor when it leaves.\n  map.on('mouseleave', 'counties', function() {\n    map.getCanvas().style.cursor = '';\n  });\n});\n</code></pre>"}, {"location": "weekly_materials/", "title": "Summary", "text": ""}, {"location": "weekly_materials/#weekly-overview", "title": "Weekly overview", "text": "Week Topic #1 GIS, Data, and Ethics"}, {"location": "weekly_materials/#course-materials", "title": "Course Materials", "text": "Week Title Content Slides Recording 1 Introducing the course, GIS, data, and ethics Lecture Here Here 1 Hello World (Wide) Web Development Lab TBD TBD"}, {"location": "weekly_materials/week01/", "title": "Week 1 - GIS, Data, and Ethics", "text": "Date Type Description Slides Recording 6/24 Lecture Introducing the course, GIS, data, and ethics TBD TBD 6/26 Lab GITting Used to Web Development and JavaScript TBD TBD"}, {"location": "weekly_materials/week01/#lecture", "title": "Lecture", "text": "<p>Charting the course for the class and how it relates to GIS, data, and ethics.</p> <p>Lecture 1 Slides - TBD</p>"}, {"location": "weekly_materials/week01/#introducing-the-course-gis-data-and-ethics", "title": "Introducing the course, GIS, data, and ethics", "text": ""}, {"location": "weekly_materials/week01/#lab", "title": "Lab", "text": "<p>Learning how to use GitHub, VSCode, and some JavaScript.</p> <ul> <li>GITting Used to Web Development and JavaScript</li> </ul>"}, {"location": "weekly_materials/week01/#group-work", "title": "Group Work", "text": "<p>Start to form teams based on initially pre-assigned groups on this spreadsheet: </p> <ul> <li>https://tinyurl.com/24su-aa191-groups</li> </ul>"}, {"location": "weekly_materials/week01/#getting-started-help", "title": "Getting Started help", "text": "<ol> <li>Signing-up with GitHub</li> <li>Git Cloning: Downloading a repo to your computer</li> <li>Git Committing: Saving your changes to a repo</li> <li>Git Creating: Creating a new repo and inviting group members</li> <li>Submitting assginments</li> <li>Subtmitting Thinking Caps</li> </ol>"}, {"location": "weekly_materials/week01/#assignments", "title": "Assignments", "text": "<p>Warning</p> <p>Unless specified otherwise, all assignments are due at the beginning of class. Late assignments will be given half credit up until a week.</p>"}, {"location": "weekly_materials/week01/#due-monday-624", "title": "Due Monday 6/24", "text": "<ul> <li>Pre-course Survey</li> </ul>"}, {"location": "weekly_materials/week01/#due-wednesday-626", "title": "Due Wednesday 6/26", "text": "<ul> <li>Pre-lab #1</li> </ul>"}, {"location": "weekly_materials/week01/#due-monday-71", "title": "Due Monday 7/1", "text": "<ul> <li>Thinking Cap: What are problems with the way we use data and GIS?</li> <li>Finish the weekly reading [PDF]</li> </ul>"}, {"location": "weekly_materials/week01/#due-wednesday-73", "title": "Due Wednesday 7/3", "text": "<ul> <li>Group Assignment #1: Repository and Readme</li> </ul>"}]}